{"ast":null,"code":"var _jsxFileName = \"/home/lucifer13/Desktop/react-task-manager/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport AppHeared from '../app-header';\nimport TaskList from '../task-list';\nimport SearchPannel from '../search-panel';\nimport '../../style.css';\nimport ItemStatusFilter from '../item-status-filter';\nimport AddItemForm from '../add-item-form';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      taskData: [this.createTasks('Check emails'), this.createTasks('Open emails'), this.createTasks('Edit emails'), this.createTasks('Delet emails')]\n    };\n\n    this.deleteItem = _id => {\n      this.setState(({\n        taskData\n      }) => {\n        const indx = taskData.findIndex(el => el._id === _id);\n        const concatArr = [...taskData.slice(0, indx), ...taskData.slice(indx + 1)];\n        return {\n          taskData: concatArr\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTasks(text); //add element in array without changing the state\n\n      this.setState(({\n        taskData\n      }) => {\n        const addedArr = [newItem, ...taskData];\n        return {\n          taskData: addedArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        taskData\n      }) => {\n        const indx = taskData.findIndex(el => el._id === _id);\n        const oldState = taskData[indx];\n        const newState = {};\n      });\n    };\n\n    this.onToggleImportant = id => {\n      console.log('important' + id);\n    };\n  }\n\n  createTasks(text) {\n    return {\n      label: text,\n      important: false,\n      done: false,\n      _id: this.maxId++\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(AppHeared, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(SearchPannel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(TaskList, {\n      data: this.state.taskData,\n      onDelete: this.deleteItem,\n      onToggleDone: this.onToggleDone,\n      onToggleImportant: this.onToggleImportant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(AddItemForm, {\n      onAdd: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/lucifer13/Desktop/react-task-manager/src/components/app/app.js"],"names":["React","Component","AppHeared","TaskList","SearchPannel","ItemStatusFilter","AddItemForm","App","maxId","state","taskData","createTasks","deleteItem","_id","setState","indx","findIndex","el","concatArr","slice","addItem","text","newItem","addedArr","onToggleDone","id","oldState","newState","onToggleImportant","console","log","label","important","done","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AppHeared from '../app-header';\nimport TaskList from '../task-list';\nimport SearchPannel from '../search-panel';\nimport '../../style.css';\nimport ItemStatusFilter from '../item-status-filter';\nimport AddItemForm from '../add-item-form'\n\n\nexport default class App extends Component {\n    maxId = 100;\n\n    //never change the state, rather create a new mem space for the new one \n    state = {\n        taskData: [\n            this.createTasks('Check emails'),\n            this.createTasks('Open emails'),\n            this.createTasks('Edit emails'),\n            this.createTasks('Delet emails')\n        ]\n    }\n\n    createTasks(text) {\n        return {\n            label: text,\n            important: false,\n            done: false,\n            _id: this.maxId++\n        }\n    }\n\n\n    deleteItem = (_id) => {\n        this.setState(({ taskData }) => {\n            const indx = taskData.findIndex((el) => el._id === _id);\n\n            const concatArr = [...taskData.slice(0, indx), ...taskData.slice(indx + 1)];\n            return {\n                taskData: concatArr\n            }\n\n        });\n    }\n\n\n    addItem = (text) => {\n        const newItem = this.createTasks(text);\n\n        //add element in array without changing the state\n        this.setState(({ taskData }) => {\n            const addedArr = [newItem, ...taskData];\n\n            return {\n                taskData: addedArr\n            }\n        });\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({ taskData }) => {\n            const indx = taskData.findIndex((el) => el._id === _id);\n\nconst oldState = taskData[indx];\nconst newState = {}\n        });\n    }\n\n\n    onToggleImportant = (id) => {\n        console.log('important' + id)\n    }\n\n    render() {\n        return (\n            <div className=\"todo-app\">\n                <AppHeared />\n                <div className=\"top-panel d-flex\">\n                    <SearchPannel />\n                    <ItemStatusFilter />\n                </div>\n                <TaskList data={this.state.taskData}\n                    onDelete={this.deleteItem}\n                    onToggleDone={this.onToggleDone}\n                    onToggleImportant={this.onToggleImportant}\n                />\n                <AddItemForm onAdd={this.addItem} />\n\n            </div>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}