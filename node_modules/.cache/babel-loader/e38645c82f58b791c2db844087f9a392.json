{"ast":null,"code":"import _defineProperty from \"/home/lucifer13/Desktop/react-task-manager/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/lucifer13/Desktop/react-task-manager/src/components/app/app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport AppHeared from '../app-header';\nimport TaskList from '../task-list';\nimport SearchPannel from '../search-panel';\nimport '../../style.css';\nimport ItemStatusFilter from '../item-status-filter';\nimport AddItemForm from '../add-item-form';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      taskData: [this.createTasks('Check emails'), this.createTasks('Open emails'), this.createTasks('Edit emails'), this.createTasks('Delet emails')],\n      term: ''\n    };\n\n    this.deleteItem = _id => {\n      this.setState(({\n        taskData\n      }) => {\n        const indx = taskData.findIndex(el => el._id === _id);\n        const concatArr = [...taskData.slice(0, indx), ...taskData.slice(indx + 1)];\n        return {\n          taskData: concatArr\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTasks(text); //add element in array without changing the state\n\n      this.setState(({\n        taskData\n      }) => {\n        const addedArr = [newItem, ...taskData];\n        return {\n          taskData: addedArr\n        };\n      });\n    };\n\n    this.onToggleDone = _id => {\n      this.setState(({\n        taskData\n      }) => {\n        return {\n          taskData: this.toggleProp(taskData, _id, 'done')\n        };\n      });\n    };\n\n    this.onToggleImportant = _id => {\n      this.setState(({\n        taskData\n      }) => {\n        return {\n          taskData: this.toggleProp(taskData, _id, 'important')\n        };\n      });\n    };\n\n    this.search = (items, term) => {\n      if (term === 0) {\n        return items;\n      }\n\n      return items.filter(item => {\n        return item.label.indexOf(term) > -1;\n      });\n    };\n\n    this.onSearch = term => {\n      this.setState;\n    };\n  }\n\n  createTasks(text) {\n    return {\n      label: text,\n      important: false,\n      done: false,\n      _id: this.maxId++\n    };\n  }\n\n  toggleProp(arr, _id, propName) {\n    const indx = arr.findIndex(el => el._id === _id);\n    const oldState = arr[indx];\n\n    const newState = _objectSpread({}, oldState, {\n      [propName]: !oldState[propName]\n    });\n\n    return [...arr.slice(0, indx), newState, ...arr.slice(indx + 1)];\n  }\n\n  render() {\n    const _this$state = this.state,\n          taskData = _this$state.taskData,\n          term = _this$state.term;\n    const visibleItems = this.search(taskData, term);\n    const doneItems = taskData.filter(el => el.done).length;\n    const toDo = taskData.length - doneItems;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(AppHeared, {\n      toDo: toDo,\n      done: doneItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(SearchPannel, {\n      onSearch: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(TaskList, {\n      data: visibleItems,\n      onDelete: this.deleteItem,\n      onToggleDone: this.onToggleDone,\n      onToggleImportant: this.onToggleImportant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(AddItemForm, {\n      onAdd: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/lucifer13/Desktop/react-task-manager/src/components/app/app.js"],"names":["React","Component","AppHeared","TaskList","SearchPannel","ItemStatusFilter","AddItemForm","App","maxId","state","taskData","createTasks","term","deleteItem","_id","setState","indx","findIndex","el","concatArr","slice","addItem","text","newItem","addedArr","onToggleDone","toggleProp","onToggleImportant","search","items","filter","item","label","indexOf","onSearch","important","done","arr","propName","oldState","newState","render","visibleItems","doneItems","length","toDo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AppHeared from '../app-header';\nimport TaskList from '../task-list';\nimport SearchPannel from '../search-panel';\nimport '../../style.css';\nimport ItemStatusFilter from '../item-status-filter';\nimport AddItemForm from '../add-item-form'\n\n\nexport default class App extends Component {\n    maxId = 100;\n\n    //never change the state, rather create a new mem space for the new one \n    state = {\n        taskData: [\n            this.createTasks('Check emails'),\n            this.createTasks('Open emails'),\n            this.createTasks('Edit emails'),\n            this.createTasks('Delet emails')\n        ],\n        term: ''\n    }\n\n    createTasks(text) {\n        return {\n            label: text,\n            important: false,\n            done: false,\n            _id: this.maxId++\n        }\n    }\n\n    deleteItem = (_id) => {\n        this.setState(({ taskData }) => {\n            const indx = taskData.findIndex((el) => el._id === _id);\n\n            const concatArr = [...taskData.slice(0, indx), ...taskData.slice(indx + 1)];\n            return {\n                taskData: concatArr\n            }\n\n        });\n    }\n\n    addItem = (text) => {\n        const newItem = this.createTasks(text);\n\n        //add element in array without changing the state\n        this.setState(({ taskData }) => {\n            const addedArr = [newItem, ...taskData];\n\n            return {\n                taskData: addedArr\n            }\n        });\n    }\n\n    toggleProp(arr, _id, propName) {\n\n        const indx = arr.findIndex((el) => el._id === _id);\n\n        const oldState = arr[indx];\n        const newState = { ...oldState, [propName]: !oldState[propName] };\n\n\n        return [\n            ...arr.slice(0, indx), newState, ...arr.slice(indx + 1)\n        ];\n    }\n\n    onToggleDone = (_id) => {\n        this.setState(({ taskData }) => {\n            return {\n                taskData: this.toggleProp(taskData, _id, 'done')\n            }\n        });\n    }\n\n    onToggleImportant = (_id) => {\n        this.setState(({ taskData }) => {\n            return {\n                taskData: this.toggleProp(taskData, _id, 'important')\n            }\n        });\n    }\n\n    search = (items, term) => {\n        if (term === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1;\n        });\n    }\n\n    onSearch = (term) => {\n        this.setState\n    }\n\n    render() {\n\n        const { taskData, term } = this.state;\n\n        const visibleItems = this.search(taskData, term);\n\n        const doneItems = taskData.filter((el) => el.done).length;\n        const toDo = taskData.length - doneItems;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeared toDo={toDo}\n                    done={doneItems} />\n                <div className=\"top-panel d-flex\">\n                    <SearchPannel onSearch={this.onSearch} />\n                    <ItemStatusFilter />\n                </div>\n                <TaskList data={visibleItems}\n                    onDelete={this.deleteItem}\n                    onToggleDone={this.onToggleDone}\n                    onToggleImportant={this.onToggleImportant}\n                />\n                <AddItemForm onAdd={this.addItem} />\n\n            </div>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}